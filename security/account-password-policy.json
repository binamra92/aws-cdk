{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Security: Account Password Policy, a cloudonaut.io template",
  "Parameters": {
    "AllowUsersToChangePassword": {
      "Description": "You can permit all IAM users in your account to use the IAM console to change their own passwords.",
      "Type": "String",
      "AllowedValues": ["true", "false"],
      "Default": "true"
    },
    "HardExpiry": {
      "Description": "You can prevent IAM users from choosing a new password after their current password has expired.",
      "Type": "String",
      "AllowedValues": ["true", "false"],
      "Default": "false"
    },
    "MaxPasswordAge": {
      "Description": "You can set IAM user passwords to be valid for only the specified number of days.",
      "Type": "Number",
      "Default": "90",
      "MinValue": "0",
      "MaxValue": "1095"
    },
    "MinimumPasswordLength": {
      "Description": "You can specify the minimum number of characters allowed in an IAM user password.",
      "Type": "Number",
      "Default": "12",
      "MinValue": "6",
      "MaxValue": "128"
    },
    "PasswordReusePrevention": {
      "Description": "You can prevent IAM users from reusing a specified number of previous passwords.",
      "Type": "Number",
      "Default": "6",
      "MinValue": "1",
      "MaxValue": "24"
    },
    "RequireLowercaseCharacters": {
      "Description": "You can require that IAM user passwords contain at least one lowercase character from the ISO basic Latin alphabet (a to z).",
      "Type": "String",
      "AllowedValues": ["true", "false"],
      "Default": "true"
    },
    "RequireNumbers": {
      "Description": "You can require that IAM user passwords contain at least one numeric character (0 to 9).",
      "Type": "String",
      "AllowedValues": ["true", "false"],
      "Default": "true"
    },
    "RequireSymbols": {
      "Description": "You can require that IAM user passwords contain at least one of the following nonalphanumeric characters: ! @ # $ % ^ & * ( ) _ + - = [ ] { } | '",
      "Type": "String",
      "AllowedValues": ["true", "false"],
      "Default": "true"
    },
    "RequireUppercaseCharacters": {
      "Description": "You can require that IAM user passwords contain at least one uppercase character from the ISO basic Latin alphabet (A to Z).",
      "Type": "String",
      "AllowedValues": ["true", "false"],
      "Default": "true"
    }
  },
  "Resources": {
    "LambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": "lambda.amazonaws.com"
            },
            "Action": ["sts:AssumeRole"]
          }]
        },
        "Path": "/",
        "Policies": [{
          "PolicyName": "logs",
          "PolicyDocument": {
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": "arn:aws:logs:*:*:*"
            }]
          }
        }, {
          "PolicyName": "iam",
          "PolicyDocument": {
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                "iam:UpdateAccountPasswordPolicy",
                "iam:DeleteAccountPasswordPolicy"
              ],
              "Resource": "*"
            }]
          }
        }]
      }
    },
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": {"Fn::Join": ["", [
            "var AWS = require('aws-sdk');", "\n",
            "var response = require('cfn-response');", "\n",
            "var iam = new AWS.IAM();", "\n",
            "exports.handler = function(event, context) {", "\n",
            "  console.log('Invoke: ' + JSON.stringify(event));", "\n",
            "  function cb(err) {", "\n",
            "    if (err) {", "\n",
            "      console.log('Error: ' + JSON.stringify(err));", "\n",
            "      response.send(event, context, response.FAILED, {});", "\n",
            "    } else {", "\n",
            "      response.send(event, context, response.SUCCESS, {});", "\n",
            "    }", "\n",
            "  }", "\n",
            "  if (event.RequestType === 'Delete') {", "\n",
            "    iam.deleteAccountPasswordPolicy({}, cb);", "\n",
            "  } else if (event.RequestType === 'Create' ||Â event.RequestType === 'Update') {", "\n",
            "    iam.updateAccountPasswordPolicy({", "\n",
            "      AllowUsersToChangePassword: ", {"Ref": "AllowUsersToChangePassword"}, ",", "\n",
            "      HardExpiry: ", {"Ref": "HardExpiry"}, ",", "\n",
            "      MaxPasswordAge: ", {"Ref": "MaxPasswordAge"}, ",", "\n",
            "      MinimumPasswordLength: ", {"Ref": "MinimumPasswordLength"}, ",", "\n",
            "      PasswordReusePrevention: ", {"Ref": "PasswordReusePrevention"}, ",", "\n",
            "      RequireLowercaseCharacters: ", {"Ref": "RequireLowercaseCharacters"}, ",", "\n",
            "      RequireNumbers: ", {"Ref": "RequireNumbers"}, ",", "\n",
            "      RequireSymbols: ", {"Ref": "RequireSymbols"}, ",", "\n",
            "      RequireUppercaseCharacters: ", {"Ref": "RequireUppercaseCharacters"}, "", "\n",
            "    }, cb);", "\n",
            "  } else {", "\n",
            "    context.fail(new Error('unsupported RequestType: ' + event.RequestType));", "\n",
            "  }", "\n",
            "};", "\n"
          ]]}
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {"Fn::GetAtt": ["LambdaRole", "Arn"]},
        "Runtime": "nodejs",
        "Timeout": 60
      }
    },
    "PasswordPolicy": {
      "DependsOn": "LambdaFunction",
      "Type": "Custom::PasswordPolicy",
      "Version": "1.0",
      "Properties": {
        "ServiceToken": {"Fn::GetAtt": ["LambdaFunction", "Arn"]}
      }
    }
  }
}
