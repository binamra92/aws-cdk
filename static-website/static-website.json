{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Static Website: combining S3, CloudFront and Route53, a cloudonaut.io template",
	"Parameters": {
		"DomainName": {
			"Description": "The primary domain name of the static website (e.g. widdix.de).",
			"Type": "String"
		},
		"RedirectDomainName": {
			"Description": "The domain name redirecting to DomainName (e.g. www.widdix.de).",
			"Type": "String"
		},
		"IamCertificateId": {
			"Description": "The Id of the SSL certificated managed by AWS IAM.",
			"Type": "String"
		},
		"HostedZoneId": {
			"Description": "The Id of the hosted zone managed by AWS Route53.",
			"Type": "String"	
		}
	},
	"Resources": {
		"S3Bucket": {
			"Type" : "AWS::S3::Bucket",
			"Properties": {
				"BucketName": {"Ref": "DomainName"},
				"WebsiteConfiguration": {
					"IndexDocument" : "index.html"
				}
			}
		},
		"S3BucketPolicy" : {
			"Type" : "AWS::S3::BucketPolicy",
			"Properties" : {
				"Bucket" : {"Ref" : "S3Bucket"},
				"PolicyDocument": {
					"Statement": [{
						"Action": ["s3:GetObject"],
						"Effect": "Allow",
						"Resource": {"Fn::Sub": "arn:aws:s3:::${S3Bucket}/*"},
						"Principal": "*"
					}]
				}
			}
		},
		"CloudFrontDistribution": {
			"Type": "AWS::CloudFront::Distribution",
			"Properties": {
				"DistributionConfig": {
					"Aliases": [{"Ref": "DomainName"}],
					"Comment": {"Ref": "DomainName"},
					"Origins": [{
						"DomainName": {"Fn::Sub": "${S3Bucket}.s3-website-${AWS::Region}.amazonaws.com"},
						"Id": "s3origin",
						"CustomOriginConfig": {"OriginProtocolPolicy": "http-only"}
					}],
					"DefaultCacheBehavior": {
						"AllowedMethods": ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"],
						"ForwardedValues": {
							"QueryString": "false",
							"Cookies": {"Forward": "none" }
						},
						"TargetOriginId": "s3origin",
						"ViewerProtocolPolicy": "redirect-to-https"
					},
					"Enabled": true,
					"PriceClass": "PriceClass_All",
					"ViewerCertificate": {
						"IamCertificateId": {"Ref": "IamCertificateId"},
						"SslSupportMethod": "sni-only", 
						"MinimumProtocolVersion": "TLSv1"
					}
				}
			}
		},
		"Route53Record": {
			"Type" : "AWS::Route53::RecordSetGroup",
			"Properties": {
				"HostedZoneId": {"Ref": "HostedZoneId"},
				"RecordSets": [{
					"Name": {"Ref": "DomainName"},
					"Type": "A",
					"AliasTarget": {
						"HostedZoneId": "Z2FDTNDATAQYW2",
						"DNSName": {"Fn::GetAtt": ["CloudFrontDistribution", "DomainName"]}
					}
				}]
			}
		},
		"S3BucketRedirect": {
			"Type" : "AWS::S3::Bucket",
			"Properties": {
				"BucketName": {"Ref": "RedirectDomainName"},
				"WebsiteConfiguration": {
					"RedirectAllRequestsTo": {
						"HostName" : {"Ref": "DomainName"},
						"Protocol" : "https"
					}
				}
			}
		},
		"CloudFrontDistributionRedirect": {
			"Type": "AWS::CloudFront::Distribution",
			"Properties": {
				"DistributionConfig": {
					"Aliases": [{"Ref": "RedirectDomainName"}],
					"Comment": {"Ref": "RedirectDomainName"},
					"Origins": [{
						"DomainName": {"Fn::Sub": "${S3BucketRedirect}.s3-website-${AWS::Region}.amazonaws.com"},
						"Id": "s3origin",
						"CustomOriginConfig": {"OriginProtocolPolicy": "http-only"}
					}],
					"DefaultCacheBehavior": {
						"AllowedMethods": ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"],
						"ForwardedValues": {
							"QueryString": "false",
							"Cookies": {"Forward": "none" }
						},
						"TargetOriginId": "s3origin",
						"ViewerProtocolPolicy": "redirect-to-https"
					},
					"Enabled": true,
					"PriceClass": "PriceClass_All",
					"ViewerCertificate": {
						"IamCertificateId": {"Ref": "IamCertificateId"},
						"SslSupportMethod": "sni-only", 
						"MinimumProtocolVersion": "TLSv1"
					}
				}
			}
		},
		"Route53RecordRedirect": {
			"Type" : "AWS::Route53::RecordSetGroup",
			"Properties": {
				"HostedZoneId": {"Ref": "HostedZoneId"},
				"RecordSets": [{
					"Name": {"Ref": "RedirectDomainName"},
					"Type": "A",
					"AliasTarget": {
						"HostedZoneId": "Z2FDTNDATAQYW2",
						"DNSName": {"Fn::GetAtt": ["CloudFrontDistributionRedirect", "DomainName"]}
					}
				}]
			}
		}
	}
}
