---
# Copyright 2018 widdix GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC: Client VPN, a cloudonaut.io template'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'Parent Stacks'
      Parameters:
      - ParentVPCStack
      - ParentAlertStack
      - ParentZoneStack
    - Label:
        default: 'VPC Parameters'
      Parameters:
      - LogsRetentionInDays
      - DnsServers
      - SplitTunnel
      - TransportProtocol
      - VpnPort
Parameters:
  ParentVPCStack:
    Description: 'Stack name of parent VPC stack based on vpc/vpc-*azs.yaml template.'
    Type: String
  ParentAlertStack:
    Description: 'Optional but recommended stack name of parent alert stack based on operations/alert.yaml template.'
    Type: String
    Default: ''
  LogsRetentionInDays:
    Description: 'Specifies the number of days you want to retain log events.'
    Type: Number
    Default: 14
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
  DnsServers:
    Description: 'Optional comma-delimited list of DNS servers to be used for DNS resolution. A Client VPN endpoint can have up to two DNS servers. If no DNS server is specified, the DNS address configured on the device is used for the DNS server.'
    Type: String
    Default: ''
  SplitTunnel:
    Description: 'Indicates whether split-tunnel is enabled on the AWS Client VPN endpoint.'
    Type: String
    Default: false
    AllowedValues:
    - true
    - false
  TransportProtocol:
    Description: 'The transport protocol to be used by the VPN session.'
    Type: String
    Default: udp
    AllowedValues:
    - tcp
    - udp
  VpnPort:
    Description: 'The port number to assign to the Client VPN endpoint for TCP and UDP traffic.'
    Type: String
    Default: '443'
    AllowedValues:
    - '443'
    - '1194'
Conditions:
  HasAlertTopic: !Not [!Equals [!Ref ParentAlertStack, '']]
Resources:
  Logs:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      RetentionInDays: !Ref LogsRetentionInDays
  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Ref 'AWS::StackName'
      VpcId: {'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC'}
  ClientVpnEndpoint:
    Type: 'AWS::EC2::ClientVpnEndpoint'
    Properties:
      AuthenticationOptions:
      - Type: directory-service-authentication
        ActiveDirectory:
          # FIXME
      ClientCidrBlock: '192.168.0.0/24'
      ConnectionLogOptions:
        CloudwatchLogGroup: !Ref Logs
        Enabled: true
      DnsServers:  !Split [',', !Ref DnsServers]
      SecurityGroupIds:
      - !Ref SecurityGroup
      ServerCertificateArn: # FIXME
      SplitTunnel: !Ref SplitTunnel
      TransportProtocol: !Ref TransportProtocol
      VpcId: {'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC'}
      VpnPort: !Ref VpnPort
Outputs:
  TemplateID:
    Description: 'cloudonaut.io template id.'
    Value: 'vpc/vpc-vpn-bastion2'
  TemplateVersion:
    Description: 'cloudonaut.io template version.'
    Value: '__VERSION__'
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
  SecurityGroup:
    Description: 'Use this Security Group to reference incoming traffic from SoftEther VPN.'
    Value: !Ref SecurityGroup
    Export:
      Name: !Sub '${AWS::StackName}-SecurityGroup'
  #IPAddress: # FIXME add?
  #  Description: 'The public IP address of SoftEther VPN.'
  #  Value: !Ref EIP
  #  Export:
  #    Name: !Sub '${AWS::StackName}-IPAddress'
